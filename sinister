#!/bin/sh

set -e

help()
{
    echo 'sinister is a simple installer for shell scripts.'
    echo
    echo 'Usage: sinister -u url [options]'
    echo
    echo 'Options:'
    echo
    echo '-?,-h,--help: Print this help and exit.'
    echo '-c,--chmod: The mode to chmod your script. Defaults are a+x and u+x.'
    echo '-l,--local: The script should be saved for the current user, instead of the entire machine.'
    echo '-n,--name: The name of the file the script should be saved to. Mandatory if no URL is given.'
    echo '-o,--output: The output directory the script should be saved to.'
    echo 'By default this is /usr/local/bin on Unix systems, and C:\Program Files\script on Windows.'
    echo '-u,--url: The location of the script online. e.g: https://github.com/you/repo/raw/master/script'
    echo 'If no URL is given the script is read from stdin.'
}

windows()
{
    uname | grep -q '[CYGWIN|MINGW|MSYS]'
}

per_user()
{
    test $LOCAL = 'true'
}

getpath_windows()
{
    $POWERSHELL "[Environment]::GetEnvironmentVariable('PATH', '$1')"
}

setpath_windows()
{
    $POWERSHELL "[Environment]::SetEnvironmentVariable('PATH', '$1', '$2')"
}

pwd_windows()
{
    $POWERSHELL '$pwd.Path'
}

rerun_as_admin()
{
    ESCAPED=()
    for ARG in "$@"
    do
        ARG="${ARG/\'/\\\'\'}" # replace ' with \''
        ARG="${ARG/\"/\\\"}" # replace " with \\\"
        ARG="${ARG/\$/\\\$}" # replace $ with \$
        ESCAPED+=("\"$ARG\"") # quote $ARG to account for whitespace
    done
    
    CURL=$(which curl) # Git Bash has issues with its $PATH as admin
    SHELL_PATH=$(cygpath -w $SHELL)
    exec $POWERSHELL "saps '$SHELL_PATH' '-c ''PATH=\"$PATH\" exec sh <($CURL -sSL http://git.io/sinister) ${ESCAPED[*]}''' -Verb RunAs"
}

CHMOD=
LOCAL='false'
NAME=
OUTPUT=
POWERSHELL='powershell -NoProfile -ExecutionPolicy Bypass'
URL=

# Test for admin privileges on Windows
windows && net session > /dev/null 2>&1 || rerun_as_admin "$@"

test $# -ne 0
while [ $# -gt 0 ]
do
    case "$1" in
        '-?'|-h|--help) help; exit 0 ;;
        -c|--chmod) CHMOD="$2"; shift ;;
        -l|--local) LOCAL='true' ;;
        -n|--name) NAME="$2"; shift ;;
        -o|--output) OUTPUT="$2"; shift ;;
        -u|--url) URL="$2"; shift ;;
        *) help 1>&2; exit 1 ;;
    esac
    shift
done

test -z "$CHMOD" && if per_user; then
    CHMOD='u+x' # Executable for the current user
else
    CHMOD='a+x' # Executable for all users
fi

if [ -z "$URL" ]; then
    test ! -z "$NAME"
    SCRIPT=$(cat /dev/stdin) # read from standard input
else
    NAME=${URL##*/} # Grab everything after the last /
    if which curl > /dev/null 2>&1; then
        SCRIPT=$(curl -sSL "$URL")
    else # Assume wget is installed
        SCRIPT=$(wget -q -O - "$URL")
    fi
fi

test -z "$OUTPUT" && if per_user; then
    if windows; then
        OUTPUT=~/AppData/Local/"$NAME"
    else
        OUTPUT=~/bin
    fi
else
    if windows; then
        OUTPUT="/C/Program Files/$NAME"
    else
        OUTPUT='/usr/local/bin'
    fi
fi

# Use sudo on Unix
windows || SUDO='sudo'

# Where the magic happens
$SUDO mkdir -p "$OUTPUT"
cd "$OUTPUT"
echo "$SCRIPT" | $SUDO tee "$NAME" > /dev/null
$SUDO chmod $CHMOD "$NAME"

# Add $OUTPUT to PATH if it's not in it
which "$NAME" > /dev/null 2>&1 || if windows; then
    if per_user; then
        TARGET='User'
    else
        TARGET='Machine'
    fi
    CURRENT_PATH=$(getpath_windows $TARGET)
    CURRENT_DIRECTORY=$(pwd_windows)
    setpath_windows "$CURRENT_PATH;$CURRENT_DIRECTORY" $TARGET
else # Unix
    CONTENTS="export PATH=\$PATH:$OUTPUT"
    if per_user; then
        echo "$CONTENTS" >> ~/.profile
    else
        sudo echo "$CONTENTS" >> /etc/profile
    fi
fi
